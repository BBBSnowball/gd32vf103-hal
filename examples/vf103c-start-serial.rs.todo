// vf103c-start-serial.rs

#![no_std]
#![no_main]

use gd32vf103_hal as hal;
use hal::{pac, prelude::*, rcu, serial};
use panic_halt as _;

#[riscv_rt::entry]
fn main() -> ! {
    let dp = pac::Peripherals::take().unwrap();
    let mut rcu = dp.RCU.constrain();
    let mut afio = dp.AFIO.split(&mut rcu.apb2);

    let mut gpioa = dp.GPIOA.split(&mut rcu.apb2);
    let pa9 = gpioa.pa9.into_alternate_push_pull(&mut gpioa.ctl1);
    let pa10 = gpioa.pa10.into_floating_input(&mut gpioa.ctl1);

    let clocks = rcu::Strict::new().freeze(&mut rcu.cfg);

    let ctimer = hal::ctimer::CoreTimer::new(dp.CTIMER);
    let mut delay = hal::delay::Delay::new(clocks, ctimer);

    let mut serial = serial::Serial::usart0(
        dp.USART0,
        (pa9, pa10),
        &mut afio.pcf0,
        serial::Config::default(),
        clocks,
        &mut rcu.apb2,
    );
    // hal::serial::init_stdout(dp.USART0);
    loop {
        let a = serial.read().unwrap();
        serial.write(a).unwrap();
        // hal::serial::write_str("NB");
        // delay.delay_ms(100u32);
    }
}
